version: "3.9"

services:
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app       # Mount the local backend folder into the container
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DATABASE_URL: "postgres://user:password@postgres:5432/telematics"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app       # Mount the local frontend folder into the container
      - node_modules:/app/node_modules  # Shared node_modules volume
    networks:
      - app-network

  angular-cli:
    build:
      context: .
      dockerfile: Dockerfile.angular
    volumes:
      - ./frontend:/app       # Mount the frontend folder for Angular CLI
      - node_modules:/app/node_modules  # Shared node_modules volume
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"         # Management UI
      - "5672:5672"           # AMQP protocol
    networks:
      - app-network

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - app-network

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "telematics"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

volumes:
  postgres-data:
  node_modules:               # Named volume for sharing node_modules

networks:
  app-network:
    driver: bridge
